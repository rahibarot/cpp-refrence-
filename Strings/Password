//password must be a combination of:
/*
numbers = "0123456789"
lower_case = "abcdefghijklmnopqrstuvwxyz"
upper_case = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
special_characters = "!@#$%^&*()-+"
*/
//minimum length of 6

#include <bits/stdc++.h>

using namespace std;

// Complete the minimumNumber function below.
int minimumNumber(int n, string password) {
    // Return the minimum number of characters to make the password strong
    int lcount = 0;
    int ucount = 0;
    int ncount = 0;
    int scount = 0;
    int add = 0;
    int add2 = 0;
    
    for(int i = 0; i < password.length(); i++){
        if(islower(password[i]))
            lcount++;
        else if(isupper(password[i]))
            ucount++;
        else if(isdigit(password[i]))
            ncount++;
        else if((password[i] > 32 && password[i] < 48) || password[i] == 94 || password[i] == 64)
            scount++;
    }
    
    if(lcount == 0)
        add++;
    if(ucount == 0)
        add++;
    if(ncount == 0)
        add++;
    if(scount == 0)
        add++;
    
    if((lcount + ucount + ncount + scount + add) < 6)                 // Picked up this logic from Anirudh S on HackerRank
        add = add + ( 6 - (lcount + ucount + ncount + scount + add));
    
    /*
    if(n < 6 && add == 0)
        return 6 - n;
    else if(n > 6 && add != 0)
        return add;
    else if(n > 6 && add == 0)
        return add;
    else{                         // not having this else statement causing failure in 8 of 89 test cases
        if(lcount == 0)           // adding this else (which seemed be the same as "n < 6 && add != 0 my first attempt)
            add2++;               // took care of the 9 failures.  Got this else logic from Savan Lalakiya on HackerRank
        if(ucount == 0)
            add2++;
        if(ncount == 0)
            add2++;
        if(scount == 0)
            add2++;
        if((add2 + n) >= 6)
            return add2;
        else{
            return 6 - n;
        }
    }
    */
    return add;
}

//Copied directly from HackerRank but simple to change

int main()
{
    ofstream fout(getenv("OUTPUT_PATH"));

    int n;
    cin >> n;
    cin.ignore(numeric_limits<streamsize>::max(), '\n');

    string password;
    getline(cin, password);

    int answer = minimumNumber(n, password);

    fout << answer << "\n";

    fout.close();

    return 0;
}

// header file

#ifndef singly_hpp
#define singly_hpp

#include <stdio.h>

class list{

private:
    struct node{
        int value;
        node *next;
    };
    
    node *head;
    node *current;
    
public:
    list();
    void addNode(int e);
    void findKthToLast(int n);
};

#endif /* singly_hpp */

// implementation file

#include <iostream>
#include <cstdlib>

#include "singly.hpp"

using namespace std;

list::list(){
    head = NULL;
    current = NULL;
}

void list::addNode(int e){
    node *v = new node;
    v-> next = NULL;
    v-> value = e;
    if(head != NULL){
        current = head;
        while(current-> next != NULL){
            current = current-> next;
        }
        current-> next = v;
    }
    else{
        head = v;
    }
}

void list::findKthToLast(int n){
    current = head;
    for(int i = 1; i <= n; i++){
        current = current-> next;
    }
    node *temp = head;
    while(current != NULL){
        current = current-> next;
        temp = temp-> next;
    }
    cout << "The " << n << "th" << " element to last is " << temp-> value << endl;
    delete temp;
}

// Main file

#include <iostream>
#include <cstdlib>

#include "singly.hpp"

using namespace std;

int main() {
    
    list Jack;
    
    Jack.addNode(3);
    Jack.addNode(6);
    Jack.addNode(9);
    Jack.addNode(1);
    Jack.addNode(3);
    Jack.addNode(6);
    Jack.addNode(7);
    cout << endl;
    
    int n;
    
    cout << "Enter the node number from last node to return it's value. " << endl;
    cout << "For example, to return the value of last node, enter 1, or " << endl;
    cout << "To return the value of the 2nd to last node, enter 3" << endl;
    cout << "Enter node location to return value: ";
    
    cin >> n;
    Jack.findKthToLast(n);
    
    return 0;
}
